{
  "endpoints": [
    {
      "name": "Accounts and Authentication",
      "methods": [
        {
          "MethodName": "Authenticate",
          "Synopsis": "Authenticates a person. This is used for consumer access to stores, administration of stores and management of assets",
          "HTTPMethod": "Get",
          "URI": "/auth",
          "parameters": [
            {
              "Name": "auth_user",
              "Location": "query",
              "Description": "The person's login (the email address used with the account)",
              "Default": "zack@kde.org",
              "Required": "Y",
              "Type": "string"
            },
            {
              "Name": "auth_password",
              "Location": "query",
              "Description": "The password for the account",
              "Required": "Y",
              "Default": "zack",
              "Type": "string"
            },
            {
              "Name": "auth_store",
              "Location": "query",
              "Description": "The store one wishes to access. For management and administration purposes, use the store \"null\"",
              "Required": "Y",
              "Default": "null",
              "Type": "string"
            }
          ]
        },
        {
          "MethodName": "Register",
          "read-only": "true",
          "Synopsis": "Creates a new account",
          "HTTPMethod": "Get",
          "URI": "/register",
          "parameters": [
            {
              "Name": "email",
              "Location": "query",
              "Description": "The email to use for this account. Must be unique, as only one account per email is permitted",
              "Required": "Y",
              "Type": "string"
            },
            {
              "Name": "password",
              "Location": "query",
              "Description": "The password to be used with this account",
              "Required": "Y",
              "Type": "string"
            },
            {
              "Name": "firstname",
              "Location": "query",
              "Description": "The person's first name",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "middlenames",
              "Location": "query",
              "Description": "The person's middle names",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "lastname",
              "Location": "query",
              "Description": "The person's last name",
              "Required": "N",
              "Type": "string"
            }
          ]
        },
        {
          "MethodName": "Registration confirmation",
          "read-only": "true",
          "Synopsis": "Confirms a new (or reactivated) account",
          "HTTPMethod": "Get",
          "URI": "/register/confirm",
          "parameters": [
            {
              "Name": "code",
              "Location": "query",
              "Description": "The code received in the confirmation email",
              "Required": "Y",
              "Type": "string"
            },
            {
              "Name": "id",
              "Location": "query",
              "Description": "Numeric ID of the account to activate",
              "Required": "Y",
              "Type": "string"
            },
            {
              "Name": "email",
              "Location": "query",
              "Description": "The email associated with the account",
              "Required": "Y",
              "Type": "string"
            }
          ]
        },
        {
          "MethodName": "Password reset request",
          "read-only": true,
          "Synopsis": "Requests a password reset. This will result in an email being sent to the user with a link to a page to complete the reset process",
          "HTTPMethod": "GET",
          "URI": "/participant/resetRequest",
          "parameters": [
            {
              "Name": "email",
              "Location": "query",
              "Description": "The email associated with the account to perform the password reset on",
              "Required": "Y",
              "Type": "string"
            }
          ]
        },
        {
          "MethodName": "Password reset confirmation",
          "read-only": true,
          "Synopsis": "Resets the password for an account, requires a code generated by a call to the password reset request method; the GET version of this method generates an HTML form that will submit to the POST version",
          "HTTPMethod": "POST",
          "URI": "/participant/resetPassword",
          "parameters": [
            {
              "Name": "email",
              "Location": "query",
              "Description": "The email associated with the account to perform the password reset on",
              "Required": "Y",
              "Type": "string"
            },
            {
              "Name": "code",
              "Location": "query",
              "Description": "The code generated by the password reset request",
              "Required": "Y",
              "Type": "string"
            },
            {
              "Name": "id",
              "Location": "query",
              "Description": "The numeric id of the account",
              "Required": "Y",
              "Type": "number"
            },
            {
              "Name": "password1",
              "Location": "body",
              "Description": "The new password for the account",
              "Required": "Y",
              "Type": "string"
            }
          ]
        },
        {
          "MethodName": "Change password",
          "read-only": true,
          "Synopsis": "Changes the password for the account currently authenticated",
          "HTTPMethod": "GET",
          "URI": "/participant/changePassword",
          "parameters": [
            {
              "Name": "newPassword",
              "Location": "query",
              "Description": "The new password; must be at least eight characters in length",
              "Required": "Y",
              "Type": "string"
            }
          ]
        },
        {
          "MethodName": "Change personal information",
          "read-only": true,
          "Synopsis": "Allows changing information for the account currently authenticated (except passwords; see the 'Change password' method)",
          "HTTPMethod": "POST",
          "URI": "/participant/changeAccountDetails",
          "parameters": [
            {
              "Name": "email",
              "Location": "body",
              "Description": "The email address to use with this account; it must not be associated with any other account since it is used as the username for authentication",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "firstName",
              "Location": "body",
              "Description": "First name of the person this account belongs to",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "middelNames",
              "Location": "body",
              "Description": "Middle names of the person this account belongs to",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "lastName",
              "Location": "body",
              "Description": "Last name of the person this account belongs to",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "card[number]",
              "Location": "body",
              "Description": "Credit card number to use; must be present with all other card information",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "card[exp_month]",
              "Location": "body",
              "Description": "Credit card expiry month; must be present with all other card information",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "card[exp_year]",
              "Location": "body",
              "Description": "Credit card expiry year; must be present with all other card information",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "active",
              "Location": "body",
              "Description": "Whether or not the account should be activated (otherwise log ins for this account will be denied)",
              "Required": "N",
              "Type": "boolean"
            }
          ]
        },
        {
          "MethodName": "Get payment method",
          "Synopsis": "Fetches the current payment method (limited to last digits of card)",
          "HTTPMethod": "GET",
          "URI": "participant/paymentMethod",
          "parameters": [
           ]
        },
        {
          "MethodName": "Update payment method",
          "Synopsis": "Updates the current payment method",
          "HTTPMethod": "POST",
          "URI": "participant/paymentMethod/update",
          "parameters": [
             {
               "Name": "card[number]",
               "Location": "body",
               "Description": "Credit card number to use; must be present with all other card information",
               "Required": "N",
               "Type": "string"
             },
             {
               "Name": "card[exp_month]",
               "Location": "body",
               "Description": "Credit card expiry month; must be present with all other card information",
               "Required": "N",
               "Type": "string"
             },
             {
               "Name": "card[exp_year]",
               "Location": "body",
               "Description": "Credit card expiry year; must be present with all other card information",
               "Required": "N",
               "Type": "string"
             }
           ]
        },
        {
          "MethodName": "Delete payment method",
          "Synopsis": "Delete the registered payment method from the account",
          "HTTPMethod": "GET",
          "URI": "participant/paymentMethod/delete",
          "parameters": [
          ]
        },
        {
          "MethodName": "Get personal information",
          "Synopsis": "Fetches the information (name, etc) associated with the currently authenticated account",
          "HTTPMethod": "GET",
          "URI": "/participant/info",
          "parameters": []
        },
        {
          "MethodName": "History",
          "Synopsis": "Fetches the activity history (purchases, downloads, etc.) for the currently authenticated account",
          "HTTPMethod": "GET",
          "URI": "/participant/history",
          "parameters": [
            {
              "Name": "pageSize",
              "Location": "query",
              "Description": "The number of results to return at a time",
              "Required": "N",
              "Type": "number"
            },
            {
              "Name": "offset",
              "Location": "query",
              "Description": "The search result offset to start listing from",
              "Required": "N",
              "Type": "number"
            }  
        ]
        }
      ]
    },
    {
      "name": "Assets",
      "methods": [
        {
          "MethodName": "Fetch information",
          "Synopsis": "Retrieves all public information related to an asset including the name, description, license, version, partner (owner/publisher), tags and related images and whether or not the currentl authenticated account can download it",
          "HTTPMethod": "Get",
          "URI": "/asset/:assetId",
          "parameters": [
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "The id of the asset, which must exist in the store you are authenticated against",
              "Required": "Y",
              "Type": "number"
            }
          ]
        },
        {
          "MethodName": "Download",
          "Synopsis": "Attempts to download an asset; if the asset is not available or not yet purchased an error with that informaton is returned. It is up to the client to decide how to install or otherwise put to use the downloaded asset",
          "HTTPMethod": "Get",
          "URI": "/asset/download/:assetId",
          "parameters": [
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "The id of the asset to download, which must exist in the store you are authenticated against",
              "Required": "Y",
              "Type": "number"
            }
          ]
        },
        {
          "MethodName": "Purchase",
          "Synopsis": "Attempts to purchase an asset; if the asset is not available in the store currently authenticated against or the account does not have enough ponts, an error with that informaton is returned",
          "HTTPMethod": "Get",
          "URI": "/asset/purchase/:assetId",
          "parameters": [
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "The id of the asset to download, which must exist in the store you are authenticated against",
              "Required": "Y",
              "Type": "number"
            }
          ]
        },
        {
          "MethodName": "Create",
          "read-only": "true",
          "Synopsis": "Creates a new asset owned by you. A file named \"info\" may be uploaded that contains all the metadata for the asset in lieue of the info body, a file named \"asset\" which is the actual asset. A file can be uploaded with the request",
          "HTTPMethod": "POST",
          "URI": "/asset/create",
          "parameters": [
                {
                    "Name": "info",
                    "Location": "body",
                    "Description": "A json document that contains the name, license, partner ID, base price, description and version of the new asset. It may also include a set of tags.",
                    "Required": "N",
                    "Type": "string"
                },
                {
                    "Name": "asset",
                    "Location": "body",
                    "Description": "The asset itself",
                    "Required": "N",
                    "Type": "file"
                }

           ]
        },
        {
          "MethodName": "Delete",
          "read-only": "true",
          "Synopsis": "Deletes an asset",
          "HTTPMethod": "GET",
          "URI": "/asset/delete/:assetId",
          "parameters": [
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "Deletes an asset owned by you",
              "Required": "Y",
              "Type": "number"
            }
          ]
        },
        {
          "MethodName": "Update",
          "read-only": "true",
          "Synopsis": "Updates an asset owned by you. Otherwise identical to create.",
          "HTTPMethod": "POST",
          "URI": "/asset/update/:assetId",
          "parameters": [
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "The id of the asset to delete. Must be owned by a partner you are affiliated with",
              "Required": "Y",
              "Type": "number"
            },
            {
                "Name": "info",
                "Location": "body",
                "Description": "A json document that contains the name, license, partner ID, base price, description and version of the new asset. It may also include a set of tags.",
                "Required": "N",
                "Type": "string"
            }
          ]
        },
        {
          "MethodName": "List",
          "read-only": "true",
          "Synopsis": "Lists the assets that belong to you",
          "HTTPMethod": "GET",
          "URI": "/asset/list/",
          "parameters": [
            {
              "Name": "type",
              "Description": "Which kind of listing to use",
              "Required": "N",
              "Default": "published",
              "Type": "enumerated",
              "EnumeratedList": ["published", "incoming", "all"]
            }
          ]
        }
      ]
    },
    {
      "name": "Browsing stores",
      "methods": [
        {
          "MethodName": "List top level categories",
          "Synopsis": "Lists all top level categories in the store currently authenticated against",
          "HTTPMethod": "Get",
          "URI": "/channels",
          "parameters": []
        },
        {
          "MethodName": "List contents in a category",
          "Synopsis": "Lists all sub-categories and assets in a given category",
          "HTTPMethod": "Get",
          "URI": "/channel/:channelId",
          "parameters": [
            {
              "Name": "channelId",
              "Location": "URL",
              "Description": "The numeric id of category to list",
              "Required": "Y",
              "Type": "number"
            },
            {
              "Name": "pageSize",
              "Location": "query",
              "Description": "The number of results to return at a time",
              "Required": "N",
              "Type": "number"
            },
            {
              "Name": "offset",
              "Location": "query",
              "Description": "The search result offset to start listing from",
              "Required": "N",
              "Type": "number"
            }
          ]
        },
        {
          "MethodName": "Search",
          "Synopsis": "Searches through all assets in a given category, matching in names, metadata and relevant tags and returning paged results",
          "HTTPMethod": "Get",
          "URI": "/search",
          "parameters": [
            {
              "Name": "channelId",
              "Location": "URL",
              "Description": "The numeric id of category to search in; will also search all sub-categories",
              "Required": "Y",
              "Type": "number"
            },
            {
              "Name": "query",
              "Location": "query",
              "Description": "The text to search for",
              "Required": "Y",
              "Type": "string"
            },
            {
              "Name": "pageSize",
              "Location": "query",
              "Description": "The number of results to return at a time",
              "Required": "N",
              "Type": "number"
            },
            {
              "Name": "offset",
              "Location": "query",
              "Description": "The search result offset to start listing from",
              "Required": "N",
              "Type": "number"
            }
          ]
        }
        ]
    },
    {
      "name": "Collections",
      "methods": [
        {
          "MethodName": "List collections",
          "Synopsis": "Lists all collections for the authenticated account",
          "HTTPMethod": "Get",
          "URI": "/collection/list",
          "parameters": []
        },
        {
          "MethodName": "List assets",
          "Synopsis": "Lists the assets in a collection",
          "HTTPMethod": "Get",
          "URI": "/collection/list/:collectionId",
          "parameters": [
            {
              "Name": "collectionId",
              "Location": "URL",
              "Description": "The id of the collection",
              "Required": "Y",
              "Type": "number"
            }
          ]
        },
        {
          "MethodName": "Create",
          "Synopsis": "Creates a new collection and returns the details of the new collection",
          "HTTPMethod": "Post",
          "URI": "/collection/create",
          "parameters": [
            {
              "Name": "name",
              "Location": "body",
              "Description": "The name of the new collection",
              "Required": "Y",
              "Type": "number"
            },
            {
              "Name": "public",
              "Location": "body",
              "Description": "Whether or not this collection should be viewable by others",
              "Required": "N",
              "Default": false,
              "Type": "boolean"
            },
            {
              "Name": "wishlist",
              "Location": "body",
              "Description": "Whether or not this collection is a wishlist",
              "Required": "N",
              "Default": false,
              "Type": "boolean"
            }
          ]
        },
        {
          "MethodName": "Delete",
          "Synopsis": "Deletes a collection",
          "HTTPMethod": "Get",
          "URI": "/collection/delete/:collectionId",
          "parameters": [
            {
              "Name": "collectionId",
              "Location": "URL",
              "Description": "The id of the collection",
              "Required": "Y",
              "Type": "number"
            }
          ]
        },
        {
          "MethodName": "Add asset",
          "Synopsis": "Add an asset to a collection",
          "HTTPMethod": "Get",
          "URI": "/collection/:collectionId/add/:assetId",
          "parameters": [
            {
              "Name": "collectionId",
              "Location": "URL",
              "Description": "The id of the collection",
              "Required": "Y",
              "Type": "number"
            },
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "The id of the asset to add",
              "Required": "Y",
              "Type": "number"
            }
          ]
        },
        {
          "MethodName": "Remove asset",
          "Synopsis": "Removes an asset from a collection",
          "HTTPMethod": "Get",
          "URI": "/collection/:collectionId/remove/:assetId",
          "parameters": [
            {
              "Name": "collectionId",
              "Location": "URL",
              "Description": "The id of the collection",
              "Required": "Y",
              "Type": "number"
            },
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "The id of the asset to add",
              "Required": "Y",
              "Type": "number"
            }
          ]
        }
        ]
    },
    {
        "name": "Points",
        "methods": [
        {
            "MethodName": "Purchase Points",
            "Synopsis": "Purchases a given number of points using a registered payment method.",
            "HTTPMethod": "Get",
            "URI": "/points/buy",
            "parameters": [
            {
                "Name": "points",
                "Location": "query",
                "Description": "The number of points to purchase",
                "Required": "Y",
                "Type": "number"
            }
            ]
        },
        {
            "MethodName": "Point price",
            "Synopsis": "Fetches the amount a given number of points costs",
            "HTTPMethod": "Get",
            "URI": "/points/price",
            "parameters": [
            {
                "Name": "amount",
                "Location": "query",
                "Default": 100,
                "Description": "The number of points to purchase. Minimum 100, will be rounded upward to the nearest 100",
                "Required": "N",
                "Type": "number"
            }
            ]
        },
        {
            "MethodName": "Redeem points code",
            "Synopsis": "Redeems a code for the number of points it is worth, which then gets added to the currently authenticated account. These codes are created and stored in the database and redeemable only once",
            "HTTPMethod": "Get",
            "URI": "/points/redeemCode/:code",
            "parameters": [
            {
                "Name": "code",
                "Location": "URL",
                "Description": "The alphanumeric code",
                "Required": "N",
                "Type": "number"
            }
            ]
        }
        ]
    },
    {
        "name": "Statistics",
        "methods": [
        {
            "MethodName": "Asset purchases",
            "Synopsis": "The number of times assets owned by you were purchased",
            "HTTPMethod": "Get",
            "URI": "/stats/assets/purchases",
            "parameters": [
                {
                    "Name": "from",
                    "Location": "query",
                    "Description": "The date to start the data set from",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "to",
                    "Location": "query",
                    "Description": "The date to end the data set at",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "granularity",
                    "Location": "query",
                    "Description": "The time span to group the stastic into",
                    "Required": "N",
                    "Type": "enumerated",
                    "Default": "month",
                    "EnumeratedList": ["day", "month", "year"]
                },
                {
                    "Name": "assets",
                    "Location": "query",
                    "Description": "The assets to fetch data for; if not provided then data for all assets owned by you are fetched",
                    "Required": "N",
                    "Type": "Array[int]"
                }
            ]
        },
        {
            "MethodName": "Asset downloads",
            "Synopsis": "The number of times assets owned by you were downloaded",
            "HTTPMethod": "Get",
            "URI": "/stats/assets/downloads",
            "parameters": [
                {
                    "Name": "from",
                    "Location": "query",
                    "Description": "The date to start the data set from",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "to",
                    "Location": "query",
                    "Description": "The date to end the data set at",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "granularity",
                    "Location": "query",
                    "Description": "The time span to group the stastic into",
                    "Required": "N",
                    "Type": "enumerated",
                    "Default": "month",
                    "EnumeratedList": ["day", "month", "year"]
                },
                {
                    "Name": "assets",
                    "Location": "query",
                    "Description": "The assets to fetch data for; if not provided then data for all assets owned by you are fetched",
                    "Required": "N",
                    "Type": "Array[int]"
                }
            ]
        },
        {
            "MethodName": "Asset points earned",
            "Synopsis": "The number of points earned in sales of assets owned by you",
            "HTTPMethod": "Get",
            "URI": "/stats/assets/points",
            "parameters": [
                {
                    "Name": "from",
                    "Location": "query",
                    "Description": "The date to start the data set from",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "to",
                    "Location": "query",
                    "Description": "The date to end the data set at",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "granularity",
                    "Location": "query",
                    "Description": "The time span to group the stastic into",
                    "Required": "N",
                    "Type": "enumerated",
                    "Default": "month",
                    "EnumeratedList": ["day", "month", "year"]
                },
                {
                    "Name": "assets",
                    "Location": "query",
                    "Description": "The assets to fetch data for; if not provided then data for all assets owned by you are fetched",
                    "Required": "N",
                    "Type": "Array[int]"
                }
            ]
        }

        ]
    }
]
}
