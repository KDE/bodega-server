{
  "endpoints": [
    {
      "name": "Accounts and Authentication",
      "methods": [
        {
          "MethodName": "Authenticate",
          "Synopsis": "Authenticates a person. This is used for consumer access to stores, administration of stores and management of assets",
          "HTTPMethod": "Get",
          "URI": "/auth",
          "parameters": [
            {
              "Name": "auth_user",
              "Location": "query",
              "Description": "The person's login (the email addr    ess used with the account)",
              "Default": "zack@kde.org",
              "Required": "Y",
              "Type": "string"
            },
            {
              "Name": "auth_password",
              "Location": "query",
              "Description": "The password for the account",
              "Required": "Y",
              "Default": "zack",
              "Type": "string"
            },
            {
              "Name": "auth_store",
              "Location": "query",
              "Description": "The store one wishes to access. For management and administration purposes, use the store \"null\"",
              "Required": "Y",
              "Default": "null",
              "Type": "string"
            }
          ]
        },
        {
          "MethodName": "Register",
          "read-only": "true",
          "Synopsis": "Creates a new account",
          "HTTPMethod": "Get",
          "URI": "/register",
          "parameters": [
            {
              "Name": "email",
              "Location": "query",
              "Description": "The email to use for this account. Must be unique, as only one account per email is permitted",
              "Required": "Y",
              "Type": "string"
            },
            {
              "Name": "password",
              "Location": "query",
              "Description": "The password to be used with this account",
              "Required": "Y",
              "Type": "string"
            },
            {
              "Name": "firstname",
              "Location": "query",
              "Description": "The person's first name",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "middlenames",
              "Location": "query",
              "Description": "The person's middle names",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "lastname",
              "Location": "query",
              "Description": "The person's last name",
              "Required": "N",
              "Type": "string"
            }
          ]
        },
        {
          "MethodName": "Registration confirmation",
          "read-only": "true",
          "Synopsis": "Confirms a new (or reactivated) account",
          "HTTPMethod": "Get",
          "URI": "/register/confirm",
          "parameters": [
            {
              "Name": "code",
              "Location": "query",
              "Description": "The code received in the confirmation email",
              "Required": "Y",
              "Type": "string"
            },
            {
              "Name": "id",
              "Location": "query",
              "Description": "Numeric ID of the account to activate",
              "Required": "Y",
              "Type": "string"
            },
            {
              "Name": "email",
              "Location": "query",
              "Description": "The email associated with the account",
              "Required": "Y",
              "Type": "string"
            }
          ]
        },
        {
          "MethodName": "Password reset request",
          "read-only": true,
          "Synopsis": "Requests a password reset. This will result in an email being sent to the user with a link to a page to complete the reset process",
          "HTTPMethod": "GET",
          "URI": "/participant/resetRequest",
          "parameters": [
            {
              "Name": "email",
              "Location": "query",
              "Description": "The email associated with the account to perform the password reset on",
              "Required": "Y",
              "Type": "string"
            }
          ]
        },
        {
          "MethodName": "Password reset confirmation",
          "read-only": true,
          "Synopsis": "Resets the password for an account, requires a code generated by a call to the password reset request method; the GET version of this method generates an HTML form that will submit to the POST version",
          "HTTPMethod": "POST",
          "URI": "/participant/resetPassword",
          "parameters": [
            {
              "Name": "email",
              "Location": "query",
              "Description": "The email associated with the account to perform the password reset on",
              "Required": "Y",
              "Type": "string"
            },
            {
              "Name": "code",
              "Location": "query",
              "Description": "The code generated by the password reset request",
              "Required": "Y",
              "Type": "string"
            },
            {
              "Name": "id",
              "Location": "query",
              "Description": "The numeric id of the account",
              "Required": "Y",
              "Type": "number"
            },
            {
              "Name": "password1",
              "Location": "body",
              "Description": "The new password for the account",
              "Required": "Y",
              "Type": "string"
            }
          ]
        },
        {
          "MethodName": "Change password",
          "read-only": true,
          "Synopsis": "Changes the password for the account currently authenticated",
          "HTTPMethod": "GET",
          "URI": "/participant/changePassword",
          "parameters": [
            {
              "Name": "newPassword",
              "Location": "query",
              "Description": "The new password; must be at least eight characters in length",
              "Required": "Y",
              "Type": "string"
            }
          ]
        },
        {
          "MethodName": "Change personal information",
          "read-only": true,
          "Synopsis": "Allows changing information for the account currently authenticated (except passwords; see the 'Change password' method)",
          "HTTPMethod": "POST",
          "URI": "/participant/changeAccountDetails",
          "parameters": [
            {
              "Name": "email",
              "Location": "body",
              "Description": "The email address to use with this account; it must not be associated with any other account since it is used as the username for authentication",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "firstName",
              "Location": "body",
              "Description": "First name of the person this account belongs to",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "middelNames",
              "Location": "body",
              "Description": "Middle names of the person this account belongs to",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "lastName",
              "Location": "body",
              "Description": "Last name of the person this account belongs to",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "card[number]",
              "Location": "body",
              "Description": "Credit card number to use; must be present with all other card information",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "card[exp_month]",
              "Location": "body",
              "Description": "Credit card expiry month; must be present with all other card information",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "card[exp_year]",
              "Location": "body",
              "Description": "Credit card expiry year; must be present with all other card information",
              "Required": "N",
              "Type": "string"
            },
            {
              "Name": "active",
              "Location": "body",
              "Description": "Whether or not the account should be activated (otherwise log ins for this account will be denied)",
              "Required": "N",
              "Type": "boolean"
            }
          ]
        },
        {
          "MethodName": "Get payment method",
          "Synopsis": "Fetches the current payment method (limited to last digits of card)",
          "HTTPMethod": "GET",
          "URI": "participant/paymentMethod",
          "parameters": []
        },
        {
          "MethodName": "Update payment method",
          "Synopsis": "Updates the current payment method",
          "HTTPMethod": "POST",
          "URI": "participant/paymentMethod/update",
          "parameters": [
             {
               "Name": "card[number]",
               "Location": "body",
               "Description": "Credit card number to use; must be present with all other card information",
               "Required": "N",
               "Type": "string"
             },
             {
               "Name": "card[exp_month]",
               "Location": "body",
               "Description": "Credit card expiry month; must be present with all other card information",
               "Required": "N",
               "Type": "string"
             },
             {
               "Name": "card[exp_year]",
               "Location": "body",
               "Description": "Credit card expiry year; must be present with all other card information",
               "Required": "N",
               "Type": "string"
             }
           ]
        },
        {
          "MethodName": "Delete payment method",
          "Synopsis": "Delete the registered payment method from the account",
          "HTTPMethod": "GET",
          "URI": "participant/paymentMethod/delete",
          "parameters": []
        },
        {
          "MethodName": "Get personal information",
          "Synopsis": "Fetches the information (name, etc) associated with the currently authenticated account",
          "HTTPMethod": "GET",
          "URI": "/participant/info",
          "parameters": []
        },
        {
          "MethodName": "History",
          "Synopsis": "Fetches the activity history (purchases, downloads, etc.) for the currently authenticated account",
          "HTTPMethod": "GET",
          "URI": "/participant/history",
          "parameters": [
            {
              "Name": "pageSize",
              "Location": "query",
              "Description": "The number of results to return at a time",
              "Required": "N",
              "Type": "number"
            },
            {
              "Name": "offset",
              "Location": "query",
              "Description": "The search result offset to start listing from",
              "Required": "N",
              "Type": "number"
            }
        ]
        }
      ]
    },
    {
      "name": "Assets",
      "methods": [
        {
          "MethodName": "Fetch detailed information",
          "Synopsis": "Retrieves all public information related to an asset including the name, description, license, version, partner (owner/publisher), tags and related images and whether or not the currentl authenticated account can download it",
          "HTTPMethod": "Get",
          "URI": "/asset/:assetId",
          "parameters": [
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "The id of the asset, which must exist in the store you are authenticated against",
              "Required": "Y",
              "Type": "number"
            },
            {
              "Name": "previews",
              "Location": "query",
              "Description": "Retrieves the previews for the specific asset, defaults to false",
              "Required": "N",
              "Type": "boolean"
            },
            {
              "Name": "changelog",
              "Location": "query",
              "Description": "Retrieves the changelog for the specific asset, defaults to false",
              "Required": "N",
              "Type": "boolean"
            },
            {
              "Name": "ratings",
              "Location": "query",
              "Description": "Retrieves the number of ratings and the average rating for the specific asset, defaults to false",
              "Required": "N",
              "Type": "boolean"
            }
          ]
        },
        {
          "MethodName": "Download",
          "Synopsis": "Attempts to download an asset; if the asset is not available or not yet purchased an error with that information is returned. It is up to the client to decide how to install or otherwise put to use the downloaded asset",
          "HTTPMethod": "Get",
          "URI": "/asset/download/:assetId",
          "parameters": [
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "The id of the asset to download, which must exist in the store you are authenticated against",
              "Required": "Y",
              "Type": "number"
            }
          ]
        },
        {
          "MethodName": "Purchase",
          "Synopsis": "Attempts to purchase an asset; if the asset is not available in the store currently authenticated against or the account does not have enough ponts, an error with that information is returned",
          "HTTPMethod": "Get",
          "URI": "/asset/purchase/:assetId",
          "parameters": [
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "The id of the asset to download, which must exist in the store you are authenticated against",
              "Required": "Y",
              "Type": "number"
            }
          ]
        },
        {
          "MethodName": "Create",
          "read-only": "true",
          "Synopsis": "Creates a new asset owned by you. A file named \"info\" may be uploaded that contains all the metadata for the asset in lieue of the info body. A file named \"asset\"  can be uploaded with the request as well. An example of the asset info json can be seen here: http://testons.makeplaylive.com:3000/api/sample-asset-info.json",
          "HTTPMethod": "POST",
          "URI": "/asset/create",
          "parameters": [
                {
                    "Name": "info",
                    "Location": "body",
                    "Description": "A json document that contains the name, license, partner ID, base price, description and version of the new asset. It may also include a set of tags.",
                    "Required": "N",
                    "Type": "string"
                },
                {
                    "Name": "asset",
                    "Location": "body",
                    "Description": "The asset itself",
                    "Required": "N",
                    "Type": "file"
                }

           ]
        },
        {
          "MethodName": "Delete",
          "read-only": "true",
          "Synopsis": "Deletes an asset",
          "HTTPMethod": "GET",
          "URI": "/asset/delete/:assetId",
          "parameters": [
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "Deletes an asset owned by you",
              "Required": "Y",
              "Type": "number"
            }
          ]
        },
        {
          "MethodName": "Post",
          "read-only": "true",
          "Synopsis": "Posts an assets, i.e. declares it ready for a review. Note that assets can't be edited for as long as the posted status is set.",
          "HTTPMethod": "POST",
          "URI": "/asset/post/:assetId",
          "parameters": [
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "Post an asset owned by you",
              "Required": "Y",
              "Type": "number"
            }
          ]
        },
        {
          "MethodName": "Publish",
          "read-only": "true",
          "Synopsis": "Publishes or rejects a posted asset to the store. Only store validators can publish assets, and either approve or reject is required.",
          "HTTPMethod": "POST",
          "URI": "/asset/publish/:assetId",
          "parameters": [
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "The id of the asset",
              "Required": "Y",
              "Type": "number"
            },
            {
              "Name": "approve",
              "Location": "query",
              "Description": "Publishes the asset (if you are a validator)",
              "Required": "N",
              "Type": "boolean"
            },
            {
              "Name": "reject",
              "Location": "query",
              "Description": "Rejects the asset (if you are a validator)",
              "Required": "N",
              "Type": "boolean"
            }
          ]
        },
        {
          "MethodName": "Update",
          "read-only": "true",
          "Synopsis": "Updates an asset owned by you. Otherwise identical to create.",
          "HTTPMethod": "POST",
          "URI": "/asset/update/:assetId",
          "parameters": [
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "The id of the asset to update. Must be owned by a partner you are affiliated with",
              "Required": "Y",
              "Type": "number"
            },
            {
                "Name": "info",
                "Location": "body",
                "Description": "A json document that contains the name, license, partner ID, base price, description and version of the new asset. It may also include a set of tags.",
                "Required": "N",
                "Type": "string"
            }
          ]
        },
        {
          "MethodName": "Check for updates",
          "read-only": "true",
          "Synopsis": "Checks a set of assets (e.g. that are locally installed) for updates",
          "HTTPMethod": "POST",
          "URI": "/asset/list/updates",
          "parameters": [
            {
              "Name": "assets",
              "Description": "An array of asset ids and dates (of download) to check against the contents of the warehouse",
              "Location": "Body",
              "Required": "N",
              "Default": "",
              "Type": "Array[ [int, date] ]"
            }
          ]
        },
        {
            "MethodName": "Fetch brief information",
            "Synopsis": "Retrieves basic information such as title, description, version, icon and size on one or more assets in this store. Useful for fetching details on things such as lists of assets that need updating. For complete information (pricing, previews, ratings, etc) use the detailed information method (/asset/:assetId) instead",
            "HTTPMethod": "POST",
            "URI": "/asset/list/briefs",
            "parameters": [
              {
                  "Name": "assets",
                  "Location": "Body",
                  "Description": "JSON array of the ids of the assets to fetch information on",
                  "Required": "Y",
                  "Type": "Array[ int ]"
              }
            ]
        },
        {
          "MethodName": "List",
          "read-only": "true",
          "Synopsis": "Lists the assets that either belong to you or, if you are a content validator, have been posted.",
          "HTTPMethod": "GET",
          "URI": "/asset/list/:type",
          "parameters": [
            {
              "Name": "type",
              "Description": "Which kind of listing to use",
              "Location": "URL",
              "Required": "N",
              "Default": "published",
              "Type": "enumerated",
              "EnumeratedList": ["published", "incoming", "all", "posted"]
            }
          ]
        },
        {
          "MethodName": "Forum Messages",
          "read-only": "true",
          "Synopsis": "Lists the messages of the asset from the forum.",
          "HTTPMethod": "GET",
          "URI": "/asset/forum/:assetId",
          "parameters": [
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "The id of the asset to show its messages.",
              "Required": "Y",
              "Type": "number"
            },
            {
              "Name": "pageSize",
              "Location": "query",
              "Description": "The number of results to return at a time",
              "Required": "N",
              "Type": "number"
            },
            {
              "Name": "offset",
              "Location": "query",
              "Description": "The search result offset to start listing from",
              "Required": "N",
              "Type": "number"
            }
          ]
        }
      ]
    },
    {
      "name": "Browsing stores",
      "methods": [
        {
          "MethodName": "List top level categories",
          "Synopsis": "Lists all top level categories in the store currently authenticated against",
          "HTTPMethod": "Get",
          "URI": "/channels",
          "parameters": []
        },
        {
          "MethodName": "List contents in a category",
          "Synopsis": "Lists all sub-categories and assets in a given category",
          "HTTPMethod": "Get",
          "URI": "/channel/:channelId",
          "parameters": [
            {
              "Name": "channelId",
              "Location": "URL",
              "Description": "The numeric id of category to list",
              "Required": "Y",
              "Type": "number"
            },
            {
              "Name": "pageSize",
              "Location": "query",
              "Description": "The number of results to return at a time",
              "Required": "N",
              "Type": "number"
            },
            {
              "Name": "offset",
              "Location": "query",
              "Description": "The search result offset to start listing from",
              "Required": "N",
              "Type": "number"
            }
          ]
        },
        {
          "MethodName": "Search",
          "Synopsis": "Searches through all assets in a given category, matching in names, metadata and relevant tags and returning paged results",
          "HTTPMethod": "Get",
          "URI": "/search",
          "parameters": [
            {
              "Name": "channelId",
              "Location": "URL",
              "Description": "The numeric id of category to search in; will also search all sub-categories",
              "Required": "Y",
              "Type": "number"
            },
            {
              "Name": "query",
              "Location": "query",
              "Description": "The text to search for",
              "Required": "Y",
              "Type": "string"
            },
            {
              "Name": "pageSize",
              "Location": "query",
              "Description": "The number of results to return at a time",
              "Required": "N",
              "Type": "number"
            },
            {
              "Name": "offset",
              "Location": "query",
              "Description": "The search result offset to start listing from",
              "Required": "N",
              "Type": "number"
            }
          ]
        }
        ]
    },
    {
      "name": "Contact information",
      "methods": [
        {
          "MethodName": "List",
          "Synopsis": "Returns contact information for both the warehouse and, if a session is action, the store",
          "HTTPMethod": "Get",
          "URI": "/contact",
          "parameters": []
        }
      ]
    },
    {
      "name": "Collections",
      "methods": [
        {
          "MethodName": "List collections",
          "Synopsis": "Lists all collections for the authenticated account",
          "HTTPMethod": "Get",
          "URI": "/collection/list",
          "parameters": []
        },
        {
          "MethodName": "List assets",
          "Synopsis": "Lists the assets in a collection",
          "HTTPMethod": "Get",
          "URI": "/collection/list/:collectionId",
          "parameters": [
            {
              "Name": "collectionId",
              "Location": "URL",
              "Description": "The id of the collection",
              "Required": "Y",
              "Type": "number"
            }
          ]
        },
        {
          "MethodName": "Create",
          "Synopsis": "Creates a new collection and returns the details of the new collection",
          "HTTPMethod": "Post",
          "URI": "/collection/create",
          "parameters": [
            {
              "Name": "name",
              "Location": "body",
              "Description": "The name of the new collection",
              "Required": "Y",
              "Type": "number"
            },
            {
              "Name": "public",
              "Location": "body",
              "Description": "Whether or not this collection should be viewable by others",
              "Required": "N",
              "Default": false,
              "Type": "boolean"
            },
            {
              "Name": "wishlist",
              "Location": "body",
              "Description": "Type of this collection",
              "Required": "N",
              "Type": "string"
            }
          ]
        },
        {
          "MethodName": "Update",
          "Synopsis": "Updates the data of an existing collection",
          "HTTPMethod": "Post",
          "URI": "/collection/update/:collectionId",
          "parameters": [
            {
              "Name": "name",
              "Location": "body",
              "Description": "The new name of the collection",
              "Required": "N",
              "Type": "number"
            },
            {
              "Name": "public",
              "Location": "body",
              "Description": "Whether or not this collection should be viewable by others",
              "Required": "N",
              "Default": false,
              "Type": "boolean"
            },
            {
              "Name": "type",
              "Location": "body",
              "Description": "Type of this collection",
              "Required": "N",
              "Type": "string"
            }
          ]
        },
        {
          "MethodName": "Delete",
          "Synopsis": "Deletes a collection",
          "HTTPMethod": "Get",
          "URI": "/collection/delete/:collectionId",
          "parameters": [
            {
              "Name": "collectionId",
              "Location": "URL",
              "Description": "The id of the collection",
              "Required": "Y",
              "Type": "number"
            }
          ]
        },
        {
          "MethodName": "Add asset",
          "Synopsis": "Add an asset to a collection",
          "HTTPMethod": "Get",
          "URI": "/collection/:collectionId/add/:assetId",
          "parameters": [
            {
              "Name": "collectionId",
              "Location": "URL",
              "Description": "The id of the collection",
              "Required": "Y",
              "Type": "number"
            },
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "The id of the asset to add",
              "Required": "Y",
              "Type": "number"
            }
          ]
        },
        {
          "MethodName": "Remove asset",
          "Synopsis": "Removes an asset from a collection",
          "HTTPMethod": "Get",
          "URI": "/collection/:collectionId/remove/:assetId",
          "parameters": [
            {
              "Name": "collectionId",
              "Location": "URL",
              "Description": "The id of the collection",
              "Required": "Y",
              "Type": "number"
            },
            {
              "Name": "assetId",
              "Location": "URL",
              "Description": "The id of the asset to add",
              "Required": "Y",
              "Type": "number"
            }
          ]
        }
        ]
    },
    {
        "name": "Easter eggs",
        "methods": [
        {
            "MethodName": "Hunt",
            "Synopsis": "Wouldn't you like to know ...",
            "HTTPMethod": "Get",
            "URI": "/hunt/:store/:code",
            "parameters": [
            {
                "Name": "store",
                "Location": "URL",
                "Description": "The id of a store",
                "Required": "Y",
                "Type": "string"
            },
            {
                "Name": "code",
                "Location": "URL",
                "Description": "A ... code?",
                "Required": "Y",
                "Type": "string"
            }
            ]
        }
        ]
    },
    {
        "name": "Partners",
        "methods": [
        {
            "MethodName": "List",
            "Synopsis": "Lists all partners the authenticated account is associated with",
            "HTTPMethod": "GET",
            "URI": "/partner/update",
            "parameters": []
        },
        {
            "MethodName": "Create",
            "Synopsis": "Adds a new partner entity and associates the currently authenticated account with it",
            "HTTPMethod": "POST",
            "URI": "/partner/create",
            "parameters": [
            {
                "Name": "name",
                "Location": "body",
                "Description": "The name of the partner",
                "Required": "Y",
                "Type": "string"
            },
            {
                "Name": "email",
                "Location": "body",
                "Description": "General contact email",
                "Required": "N",
                "Type": "string"
            }
            ]
        },
        {
            "MethodName": "Update",
            "Synopsis": "Updates a partner entity with new information",
            "HTTPMethod": "POST",
            "URI": "/partner/update/:partner",
            "parameters": [
            {
                "Name": "partner",
                "Location": "URL",
                "Description": "The id of the partner",
                "Required": "Y",
                "Type": "number"
            },
            {
                "Name": "name",
                "Location": "body",
                "Description": "The name of the partner",
                "Required": "N",
                "Type": "string"
            },
            {
                "Name": "email",
                "Location": "body",
                "Description": "General contact email",
                "Required": "N",
                "Type": "string"
            }
            ]
        },
        {
            "MethodName": "Create web link",
            "Synopsis": "Creates a partner web link. If an account is provided then a service must be defined. A url or an account is required, and a url may also have a service defined for it. See the service types listing in the utils section",
            "HTTPMethod": "POST",
            "URI": "/partner/:partner/link/create/",
            "parameters": [
            {
                "Name": "partner",
                "Location": "URL",
                "Description": "The id of the partner",
                "Required": "Y",
                "Type": "number"
            },
            {
                "Name": "service",
                "Location": "body",
                "Description": "The type of service",
                "Required": "N",
                "Type": "string"
            },
            {
                "Name": "account",
                "Location": "body",
                "Description": "The account name for the service. This will automatically be interpolated into the service's template URL",
                "Required": "N",
                "Type": "string"
            },
            {
                "Name": "url",
                "Location": "body",
                "Description": "The full URL to the link",
                "Required": "N",
                "Type": "string"
            }
            ]
        },
        {
            "MethodName": "Delete web link",
            "Synopsis": "Deletes a partner web link matching the parameters provided",
            "HTTPMethod": "POST",
            "URI": "/partner/:partner/link/delete/",
            "parameters": [
            {
                "Name": "partner",
                "Location": "URL",
                "Description": "The id of the partner",
                "Required": "Y",
                "Type": "number"
            },
            {
                "Name": "service",
                "Location": "body",
                "Description": "The type of service",
                "Required": "N",
                "Type": "string"
            },
            {
                "Name": "account",
                "Location": "body",
                "Description": "The account name for the service",
                "Required": "N",
                "Type": "string"
            },
            {
                "Name": "url",
                "Location": "body",
                "Description": "The full URL to the link",
                "Required": "N",
                "Type": "string"
            }
            ]
        },
        {
            "MethodName": "List bank account information",
            "Synopsis": "Lists banking details; requires the Accounts role for the currently authorized person",
            "HTTPMethod": "GET",
            "URI": "/partner/:partner/banking/account/list",
            "parameters": [
            {
                "Name": "partner",
                "Location": "URL",
                "Description": "The id of the partner",
                "Required": "Y",
                "Type": "number"
            }
            ]
        },
        {
            "MethodName": "Set bank account information",
            "Synopsis": "Sets the banking details for where funds from converted earned points should be sent; if neither a SWIFT nor IBAN identifier is provided, the account information will be removed; requires the Accounts role for the  currently authorized person",
            "HTTPMethod": "POST",
            "URI": "/partner/:partner/banking/account/update",
            "parameters": [
            {
                "Name": "partner",
                "Location": "URL",
                "Description": "The id of the partner",
                "Required": "Y",
                "Type": "number"
            },
            {
                "Name": "nameOnAccount",
                "Location": "Body",
                "Description": "The name of the account holder",
                "Required": "Y",
                "Type": "string"
            },
            {
                "Name": "address",
                "Location": "Body",
                "Description": "Address of account holder",
                "Required": "Y",
                "Type": "string"
            },
            {
                "Name": "bank",
                "Location": "Body",
                "Description": "Name of the banking institution",
                "Required": "Y",
                "Type": "string"
            },
            {
                "Name": "bankAddress",
                "Location": "Body",
                "Description": "Address of the banking institution",
                "Required": "Y",
                "Type": "string"
            },
            {
                "Name": "account",
                "Location": "Body",
                "Description": "The account number",
                "Required": "Y",
                "Type": "string"
            },
            {
                "Name": "swift",
                "Location": "Body",
                "Description": "The SWIFT ID of the banking institution",
                "Required": "N",
                "Type": "string"
            },
            {
                "Name": "iban",
                "Location": "Body",
                "Description": "The IBAN transfer number for the account",
                "Required": "Y",
                "Type": "string"
            }
            ]
        },
        {
            "MethodName": "Delete bank account information",
            "Synopsis": "Removes banking details; requires the Accounts role for the currently authorized person",
            "HTTPMethod": "GET",
            "URI": "/partner/:partner/banking/account/delete",
            "parameters": [
            {
                "Name": "partner",
                "Location": "URL",
                "Description": "The id of the partner",
                "Required": "Y",
                "Type": "number"
            }
            ]
        },
        {
            "MethodName": "Set roles",
            "Synopsis": "Sets roles for one or more person for a given partner. The account must have the Partner Manager role to be able to do this",
            "HTTPMethod": "POST",
            "URI": "/partner/roles/update/:partner",
            "parameters": [
            {
                "Name": "partner",
                "Location": "URL",
                "Description": "The id of the partner",
                "Required": "Y",
                "Type": "number"
            },
            {
                "Name": "person",
                "Location": "Body",
                "Description": "The email of the person to add to this partner",
                "Required": "Y",
                "Type": "string"
            },
            {
                "Name": "roles",
                "Location": "Body",
                "Description": "The roles the person should have; they must be existing roles known the Bodega warehouse. See the 'List roles' function",
                "Required": "Yes",
                "Type": "Array[string]"
            }
            ]
        },
        {
            "MethodName": "List roles",
            "Synopsis": "Returns the list of all define roles people can have with a partner",
            "HTTPMethod": "GET",
            "URI": "/partner/roles/list",
            "parameters": []
        },
        {
            "MethodName": "Request publisher status",
            "Synopsis": "Enters a request to have publisher status added to a partner the account is affiliated with. This allows creation and management of assets.",
            "HTTPMethod": "POST",
            "URI": "/partner/request/publisher/:partner",
            "parameters": [
            {
                "Name": "partner",
                "Location": "URL",
                "Description": "The id of the partner",
                "Required": "Y",
                "Type": "number"
            },
            {
                "Name": "information",
                "Location": "body",
                "Description": "An explanation of the intended use of publisher status or other useful informaton that can help direct the approval process.",
                "Required": "N",
                "Type": "string"
            }
            ]
        },
        {
            "MethodName": "Request distributor status",
            "Synopsis": "Enters a request to have distributor status added to a partner the account is affiliated with. This allows creation and management of stores.",
            "HTTPMethod": "POST",
            "URI": "/partner/request/distributor/:partner",
            "parameters": [
            {
                "Name": "partner",
                "Location": "URL",
                "Description": "The id of the partner",
                "Required": "Y",
                "Type": "number"
            },
            {
                "Name": "information",
                "Location": "body",
                "Description": "A description of the store target (e.g. a device, a given platform, etc.) that can help direct the approval process.",
                "Required": "N",
                "Type": "string"
            }
            ]
        }
        ]
    },
    {
        "name": "Points",
        "methods": [
        {
            "MethodName": "Purchase Points",
            "Synopsis": "Purchases a given number of points using a registered payment method",
            "HTTPMethod": "Get",
            "URI": "/points/buy",
            "read-only": true,
            "parameters": [
            {
                "Name": "points",
                "Location": "query",
                "Description": "The number of points to purchase",
                "Required": "Y",
                "Type": "number"
            }
            ]
        },
        {
            "MethodName": "Point price",
            "Synopsis": "Fetches the amount a given number of points costs",
            "HTTPMethod": "Get",
            "URI": "/points/price",
            "parameters": [
            {
                "Name": "amount",
                "Location": "query",
                "Default": 100,
                "Description": "The number of points to purchase. Minimum 100, will be rounded upward to the nearest 100",
                "Required": "N",
                "Type": "number"
            }
            ]
        },
        {
            "MethodName": "Redeem points code",
            "Synopsis": "Redeems a code for the number of points it is worth, which then gets added to the currently authenticated account. These codes are created and stored in the database and redeemable only once",
            "HTTPMethod": "Get",
            "read-only": true,
            "URI": "/points/redeemCode/:code",
            "parameters": [
            {
                "Name": "code",
                "Location": "URL",
                "Description": "The alphanumeric code",
                "Required": "N",
                "Type": "number"
            }
            ]
        }
        ]
    },
    {
        "name": "Statistics",
        "methods": [
        {
            "MethodName": "Asset purchases",
            "Synopsis": "The number of times assets owned by you were purchased",
            "HTTPMethod": "Get",
            "URI": "/stats/assets/purchases",
            "parameters": [
                {
                    "Name": "from",
                    "Location": "query",
                    "Description": "The date to start the data set from",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "to",
                    "Location": "query",
                    "Description": "The date to end the data set at",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "granularity",
                    "Location": "query",
                    "Description": "The time span to group the stastic into",
                    "Required": "N",
                    "Type": "enumerated",
                    "Default": "month",
                    "EnumeratedList": ["day", "month", "year"]
                },
                {
                    "Name": "assets",
                    "Location": "query",
                    "Description": "The assets to fetch data for; if not provided then data for all assets owned by you are fetched",
                    "Required": "N",
                    "Type": "Array[int]"
                }
            ]
        },
        {
            "MethodName": "Asset downloads",
            "Synopsis": "The number of times assets owned by you were downloaded",
            "HTTPMethod": "Get",
            "URI": "/stats/assets/downloads",
            "parameters": [
                {
                    "Name": "from",
                    "Location": "query",
                    "Description": "The date to start the data set from",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "to",
                    "Location": "query",
                    "Description": "The date to end the data set at",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "granularity",
                    "Location": "query",
                    "Description": "The time span to group the stastic into",
                    "Required": "N",
                    "Type": "enumerated",
                    "Default": "month",
                    "EnumeratedList": ["day", "month", "year"]
                },
                {
                    "Name": "assets",
                    "Location": "query",
                    "Description": "The assets to fetch data for; if not provided then data for all assets owned by you are fetched",
                    "Required": "N",
                    "Type": "Array[int]"
                }
            ]
        },
        {
            "MethodName": "Asset points earned",
            "Synopsis": "The number of points earned in sales of assets owned by you",
            "HTTPMethod": "Get",
            "URI": "/stats/assets/points",
            "parameters": [
                {
                    "Name": "from",
                    "Location": "query",
                    "Description": "The date to start the data set from",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "to",
                    "Location": "query",
                    "Description": "The date to end the data set at",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "granularity",
                    "Location": "query",
                    "Description": "The time span to group the stastic into",
                    "Required": "N",
                    "Type": "enumerated",
                    "Default": "month",
                    "EnumeratedList": ["day", "month", "year"]
                },
                {
                    "Name": "assets",
                    "Location": "query",
                    "Description": "The assets to fetch data for; if not provided then data for all assets owned by you are fetched",
                    "Required": "N",
                    "Type": "Array[number]"
                }
            ]
        },
        {
            "MethodName": "Store purchases",
            "Synopsis": "The number of times assets were purchased in stores owned by you",
            "HTTPMethod": "Get",
            "URI": "/stats/stores/purchases",
            "parameters": [
                {
                    "Name": "from",
                    "Location": "query",
                    "Description": "The date to start the data set from",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "to",
                    "Location": "query",
                    "Description": "The date to end the data set at",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "granularity",
                    "Location": "query",
                    "Description": "The time span to group the stastic into",
                    "Required": "N",
                    "Type": "enumerated",
                    "Default": "month",
                    "EnumeratedList": ["day", "month", "year"]
                },
                {
                    "Name": "assets",
                    "Location": "query",
                    "Description": "The assets to fetch data for; if not provided then data for all assets owned by you are fetched",
                    "Required": "N",
                    "Type": "Array[int]"
                }
            ]
        },
        {
            "MethodName": "Stores downloads",
            "Synopsis": "The number of times assets were downloaded in stores owned by you",
            "HTTPMethod": "Get",
            "URI": "/stats/stores/downloads",
            "parameters": [
                {
                    "Name": "from",
                    "Location": "query",
                    "Description": "The date to start the data set from",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "to",
                    "Location": "query",
                    "Description": "The date to end the data set at",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "granularity",
                    "Location": "query",
                    "Description": "The time span to group the stastic into",
                    "Required": "N",
                    "Type": "enumerated",
                    "Default": "month",
                    "EnumeratedList": ["day", "month", "year"]
                },
                {
                    "Name": "assets",
                    "Location": "query",
                    "Description": "The assets to fetch data for; if not provided then data for all assets owned by you are fetched",
                    "Required": "N",
                    "Type": "Array[int]"
                }
            ]
        },
        {
            "MethodName": "Store points earned",
            "Synopsis": "The number of points earned in sales of assets in stores owned by you",
            "HTTPMethod": "Get",
            "URI": "/stats/stores/points",
            "parameters": [
                {
                    "Name": "from",
                    "Location": "query",
                    "Description": "The date to start the data set from",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "to",
                    "Location": "query",
                    "Description": "The date to end the data set at",
                    "Required": "N",
                    "Type": "date"
                },
                {
                    "Name": "granularity",
                    "Location": "query",
                    "Description": "The time span to group the stastic into",
                    "Required": "N",
                    "Type": "enumerated",
                    "Default": "month",
                    "EnumeratedList": ["day", "month", "year"]
                },
                {
                    "Name": "assets",
                    "Location": "query",
                    "Description": "The assets to fetch data for; if not provided then data for all assets owned by you are fetched",
                    "Required": "N",
                    "Type": "Array[number]"
                }
            ]
        }
        ]
    },
    {
        "name": "Stores",
        "methods": [
        {
            "MethodName": "List",
            "Synopsis": "Lists all stores owned by partner organizations your account is affiliated with. The listing includes id, name, partner and markups",
            "HTTPMethod": "GET",
            "URI": "/store/list",
            "parameters": []
        },
        {
            "MethodName": "Structure",
            "Synopsis": "Fetches the channel structure of a store as a single JSON object",
            "HTTPMethod": "GET",
            "URI": "/store/structure/:id",
            "parameters": [
                {
                    "Name": "id",
                    "Location": "URL",
                    "Description": "The internal of the store",
                    "Required": "Y",
                    "Type": "string"
                }
            ]
        },
        {
            "MethodName": "Create",
            "Synopsis": "Creates a new store; the account must be a 'Store Manager' to use this method",
            "HTTPMethod": "POST",
            "URI": "/store/create",
            "parameters": [
                {
                    "Name": "name",
                    "Location": "body",
                    "Description": "The name of the store",
                    "Required": "Y",
                    "Type": "string"
                },
                {
                    "Name": "desc",
                    "Location": "body",
                    "Description": "Descriptive text for the store",
                    "Required": "N",
                    "Type": "string"
                },
                {
                    "Name": "id",
                    "Location": "body",
                    "Description": "The internal id for the store; If not provided it is based on the name. The id must be unique across all stores",
                    "Required": "N",
                    "Type": "string"
                },
                {
                    "Name": "partner",
                    "Location": "body",
                    "Description": "The partner organization that should own the store; if left empty it selects the default partner",
                    "Required": "N",
                    "Type": "number"
                },
                {
                    "Name": "minMarkup",
                    "Location": "body",
                    "Description": "The minimum markup (in points) to put on all assets in this store",
                    "Required": "N",
                    "Default": 0,
                    "Type": "number"
                },
                {
                    "Name": "maxMarkup",
                    "Location": "body",
                    "Description": "The maximum markup (in points) to put on any given asset in this store; a value of zero means no maximum",
                    "Required": "N",
                    "Default": 0,
                    "Type": "number"
                },
                {
                    "Name": "markup",
                    "Location": "body",
                    "Description": "The markup to apply to assets in the store; it is interpreted as a percentage to mark up the base price of assets by (e.g. 15 = 15%, so an asset with a base price of 100 points would cost 115 points in the store)",
                    "Required": "N",
                    "Default": 0,
                    "Type": "number"
                }
            ]
        },
        {
            "MethodName": "Update",
            "Synopsis": "Updates the name and markup rates of a store",
            "HTTPMethod": "POST",
            "URI": "/store/update/:store",
            "parameters": [
                {
                    "Name": "store",
                    "Location": "URL",
                    "Description": "The id of the store to update",
                    "Required": "Y",
                    "Type": "string"
                },
                {
                    "Name": "name",
                    "Location": "body",
                    "Description": "The new name of the store; if empty the name is unchanged",
                    "Required": "N",
                    "Type": "string"
                },
                {
                    "Name": "desc",
                    "Location": "body",
                    "Description": "Descriptive text for the store",
                    "Required": "N",
                    "Type": "string"
                },
                {
                    "Name": "minMarkup",
                    "Location": "body",
                    "Description": "The minimum markup (in points) to put on all assets in this store; if not provided the rate is unchanged",
                    "Required": "N",
                    "Type": "number"
                },
                {
                    "Name": "maxMarkup",
                    "Location": "body",
                    "Description": "The maximum markup (in points) to put on any given asset in this store; a value of zero means no maximum; if not provided the rate is unchanged",
                    "Required": "N",
                    "Type": "number"
                },
                {
                    "Name": "markup",
                    "Location": "body",
                    "Description": "The markup to apply to assets in the store; it is interpreted as a percentage to mark up the base price of assets by (e.g. 15 = 15%, so an asset with a base price of 100 points would cost 115 points in the store); if not provided the rate is unchanged",
                    "Required": "N",
                    "Type": "number"
                }
            ]
        },
        {
            "MethodName": "Delete",
            "Synopsis": "Deletes a store",
            "HTTPMethod": "GET",
            "URI": "/store/delete/:store",
            "parameters": [
                {
                    "Name": "store",
                    "Location": "URL",
                    "Description": "The id of the store",
                    "Required": "Y",
                    "Type": "string"
                }
            ]
        }
        ]
    },
    {
        "name": "Store channels",
        "methods": [
        {
            "MethodName": "Create",
            "Synopsis": "Adds a channel to a store",
            "HTTPMethod": "POST",
            "URI": "/store/channel/create/:store",
            "parameters": [
                {
                    "Name": "store",
                    "Location": "URL",
                    "Description": "The id of the store to add the channel to",
                    "Required": "Y",
                    "Type": "string"
                },
                {
                    "Name": "parent",
                    "Location": "body",
                    "Description": "The parent channel for this channel; if less than 1 or not provided the channel is created as a top-level channel in the store",
                    "Required": "N",
                    "Type": "number"
                },
                {
                    "Name": "name",
                    "Location": "body",
                    "Description": "The name for the channel",
                    "Required": "Y",
                    "Type": "string"
                },
                {
                    "Name": "description",
                    "Location": "body",
                    "Description": "A descriptive text for the channel",
                    "Required": "N",
                    "Type": "string"
                },
                {
                    "Name": "tags",
                    "Location": "body",
                    "Description": "Tags (by id) to associate with the channel",
                    "Required": "N",
                    "Type": "Array[number]"
                }
            ]
        },
        {
            "MethodName": "Update",
            "Synopsis": "Updates and existing channel in a store",
            "HTTPMethod": "POST",
            "URI": "/store/channel/update/:store",
            "parameters": [
                {
                    "Name": "store",
                    "Location": "URL",
                    "Description": "The id of the store to add the channel to",
                    "Required": "Y",
                    "Type": "string"
                },
                {
                    "Name": "parent",
                    "Location": "body",
                    "Description": "The parent channel for this channel; if 0, the channel is turned into a top-level channel in the store; if less than 0 then the parent is untouched",
                    "Required": "N",
                    "Type": "number"
                },
                {
                    "Name": "name",
                    "Location": "body",
                    "Description": "The new name for the channel",
                    "Required": "N",
                    "Type": "string"
                },
                {
                    "Name": "description",
                    "Location": "body",
                    "Description": "A new descriptive text for the channel",
                    "Required": "N",
                    "Type": "string"
                },
                {
                    "Name": "tags",
                    "Location": "body",
                    "Description": "Tags (by id) to associate with the channel; if not an array the tags associated with the channel are not altered",
                    "Required": "N",
                    "Type": "Array[number]"
                }
            ]
        },
        {
            "MethodName": "Delete",
            "Synopsis": "Deletes a channel from a store",
            "HTTPMethod": "GET",
            "URI": "/store/delete/:store/:channel",
            "parameters": [
                {
                    "Name": "store",
                    "Location": "URL",
                    "Description": "The id of the store",
                    "Required": "Y",
                    "Type": "string"
                },
                {
                    "Name": "channel",
                    "Location": "URL",
                    "Description": "The id of the channel to delete",
                    "Required": "Y",
                    "Type": "string"
                }
            ]
        }
        ]
    },
    {
        "name": "Tags",
        "methods": [
        {
            "MethodName": "Types",
            "Synopsis": "list all types for the tags",
            "HTTPMethod": "GET",
            "URI": "/tag/types",
            "parameters": []
        },
        {
            "MethodName": "List",
            "Synopsis": "list all tags, matching the given type if specified, otherwise list all tags",
            "HTTPMethod": "GET",
            "URI": "/tag/list/?:type?",
            "parameters": [
                {
                    "Name": "type",
                    "Location": "URL",
                    "Description": "The id of the type we want to list tags of",
                    "Required": "N",
                    "Type": "number"
                }
            ]
        },
        {
            "MethodName": "Create",
            "Synopsis": "Create a new tag",
            "HTTPMethod": "POST",
            "URI": "/tag/create",
            "parameters": [
                {
                    "Name": "type",
                    "Location": "body",
                    "Description": "The id of the type of the new tag",
                    "Required": "Y",
                    "Type": "number"
                },
                {
                    "Name": "title",
                    "Location": "body",
                    "Description": "The readable name for the new tag",
                    "Required": "Y",
                    "Type": "string"
                }
            ]
        },
        {
            "MethodName": "Update",
            "Synopsis": "Update an existing tag",
            "HTTPMethod": "POST",
            "URI": "/tag/update/:tag",
            "parameters": [
                {
                    "Name": "tag",
                    "Location": "URL",
                    "Description": "The id of the tag we want to modify",
                    "Required": "Y",
                    "Type": "number"
                },
                {
                    "Name": "type",
                    "Location": "body",
                    "Description": "The id of the type of the new tag",
                    "Required": "Y",
                    "Type": "number"
                },
                {
                    "Name": "title",
                    "Location": "body",
                    "Description": "The readable name for the new tag",
                    "Required": "Y",
                    "Type": "string"
                }
            ]
        },
        {
            "MethodName": "Delete",
            "Synopsis": "Delete an existing tag",
            "HTTPMethod": "GET",
            "URI": "/tag/delete/:tag",
            "parameters": [
                {
                    "Name": "tag",
                    "Location": "URL",
                    "Description": "The id of the tag we want to delete",
                    "Required": "Y",
                    "Type": "number"
                }
            ]
        }
        ]
    },
    {
        "name": "Ratings",
        "methods": [
            {
                "MethodName": "Remove rating",
                "Synopsis": "Remove the rating for the specific asset",
                "HTTPMethod": "GET",
                "URI": "asset/ratings/delete/:assetId",
                "parameters": [
                    {
                        "Name": "assetId",
                        "Location": "URL",
                        "Description": "The id of asset from which we want to remove its rating",
                        "Required": "Y",
                        "Type": "Number"
                    }
                ]
            },
            {
                "MethodName": "Attributes",
                "Synopsis": "The possible rating attributes for the specific asset",
                "HTTPMethod": "GET",
                "URI": "/asset/ratings/attributes/:assetId",
                "parameters": [
                    {
                        "Name": "assetId",
                        "Location": "URL",
                        "Description": "The id of asset",
                        "Required": "Y",
                        "Type": "Number"
                    }
                ]
            },
            {
                "MethodName": "Asset Ratings",
                "Synopsis": "The ratings of the asset",
                "HTTPMethod": "GET",
                "URI": "/asset/ratings/list/:assetId",
                "parameters": [
                    {
                        "Name": "assetId",
                        "Location": "URL",
                        "Description": "The id of asset",
                        "Required": "Y",
                        "Type": "Number"
                    },
                    {
                        "Name": "pageSize",
                        "Location": "query",
                        "Description": "The number of results to return at a time",
                        "Required": "N",
                        "Type": "number"
                    },
                    {
                        "Name": "offset",
                        "Location": "query",
                        "Description": "The search result offset to start listing from",
                        "Required": "N",
                        "Type": "number"
                    }
                ]
            },
            {
                "MethodName": "Ratings by participant",
                "Synopsis": "The ratings of the participant, if the assetId exists it will show only the ratings for the specific asset",
                "HTTPMethod": "GET",
                "URI": "/participant/ratings/:assetId?",
                "parameters": [
                    {
                        "Name": "pageSize",
                        "Location": "query",
                        "Description": "The number of results to return at a time",
                        "Required": "N",
                        "Type": "number"
                    },
                    {
                        "Name": "offset",
                        "Location": "query",
                        "Description": "The search result offset to start listing from",
                        "Required": "N",
                        "Type": "number"
                    },
                    {
                        "Name": "assetId",
                        "Location": "url",
                        "Description": "The ratings of the participant for the specific asset",
                        "Required": "N",
                        "Type": "number"
                    }
                ]
            },
            {
                "MethodName": "Rate Asset",
                "Synopsis": "Add ratings for an asset",
                "HTTPMethod": "POST",
                "URI": "/asset/ratings/create/:assetId",
                "parameters": [
                    {
                        "Name": "ratings",
                        "Location": "BODY",
                        "Description": "A JSON object containing the rating for each attribute, e.g.: { 100: 3, 101: 4 }. The first number is the attribute ID and the second is the rating.",
                        "Required": "Y",
                        "Type": "String"
                    }
                ]
            }
        ]
    }
]
}
